q()
a <- available.packages()
head(rownames(a), 3)
help(rownames)
help(help)
help(rownames)
?rownames
args(rownames)
find.package(devtools)
install.packages(devtools)
search()
install.packages("devtools")
install.packages("KernSmooth")
library(KernSmooth)
q()
x <- 4
class(x)
c <- c(4, "a", TRUE)
class(c)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <- list(2,"a","b", TRUE)
b = x[[2]]
class(b)
b
x <- 1:4
y <-
2
y
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
con <- file("/Users/bpafoshizle/Downloads/hw1_data.csv", "r")
data <- read.csv(con)
close(con)
data
names(data)
data[1:2]
data[2,]
data[1:2,]
help(data)
help()
help(data)
View(data)
data(nrows=2)
data$Ozone
data$Ozone
clear()
clear
class(data$Ozone)
head(data,4)
head(data,2)
data[1:2,]
obs(data)
nrow(data)
View(data)
View(data)
tail(data,2)
data$Ozone[47]
data[47,]
is.na(data$Ozone)
missing <- data$Ozone[is.na()]
missingV <- is.na(data$Ozone)
missingV
missing = missingV[missingV = TRUE]
missing
missing <- missingV[missingV = TRUE]
missing
data$Ozone[missingV]
sum(is.na(data$Ozone))
is.na(data$Ozone)
goodOzone <- complete.cases(data$Ozone)
goodOzone
data$Ozone[goodOzone]
data$Ozone[!goodOzone]
count(data$Ozone[!goodOzone])
mean(data$Ozone[goodOzone])
data[data$Ozone > 31]
data[data$Ozone > 31,]
data
data[goodOzone]$Ozone
data[goodOzone]
data[data$Ozone[goodOzone]
]
data[data$Ozone[goodOzone]]
data[data$Ozone[goodOzone],]
data
delete(missing)
del(missing)
data[goodOzone]
data[goodOzone,]
data[goodOzone,]$Ozone
data[goodOzone,][$Ozone > 31]
data[goodOzone,][$Ozone > 31,]
data[goodOzone,][data$Ozone > 31,]
data[data$Ozone > 31,][goodOzone]
data[data$Ozone > 31,][goodOzone,]
goodOzoneData <- data[goodOzone,]
goodOzoneData[goodOzoneData$Ozone > 31.0,]
goodOzoneData[goodOzoneData$Ozone > 31.0 goodOzoneData$Temp > 90,]
goodOzoneData[c("goodOzoneData$Ozone > 31.0", "goodOzoneData$Temp > 90"),]
goodOzoneData[goodOzoneData$Ozone > 31.0, goodOzoneData$Temp > 90,]
goodOzoneData[goodOzoneData$Ozone > 31.0 & goodOzoneData$Temp > 90,]
data[goodOzone & data$Ozone > 31]
data[goodOzone & data$Ozone > 31,]
data[goodOzone & data$Ozone > 31 & Temp > 90,]
data[goodOzone & data$Ozone > 31 & data$Temp > 90,]
mean(data[goodOzone & data$Ozone > 31 & data$Temp > 90,]$Solar.R
)
data[goodOzone & data$Month = 6,]
data[goodOzone & data$Month == 6,]
data[goodOzone & data$Month == 6,]$Temp
mean(data[goodOzone & data$Month == 6,]$Temp)
mean(data[data$Month == 6,]$Temp)
max(data[data$Month==5]$Ozone)
max(data[data$Month==5,]$Ozone)
max(data[goodOzone & data$Month==5,]$Ozone)
add2 <- function(x, y){
x + y
}
add2(2,3)
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x, n){
use <- x > n
x[use]
}
x <- 1:20
above(x)
above(x, 12)
above <- function(x, n = 10){
use <- x > n
x[use]
}
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc) # init to all zeros
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
columnmeans(airquality)
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc) # init to all zeros
for(i in 1:nc){
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
source('~/.active-rstudio-document')
search()
x <- 1:10
if(x > 5){ x<- 0}
getwd()
swirl()
install.packages("swirl")
swirl()
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_date
my_data
0/0
Inf-Inf
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0,10,by=.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along= my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
play()
y > 0
rep(NA, 10)
seq(1:pi)
nxt()
y[y > 0]
x[x > 0]
x[!is.na() & x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[30000]
x[3000]
x[(-2, -10)]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20, nrows=4, ncols=5)
matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
con <- url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
?cat
?runig
?runif
?pnorm
mean(x)
traceback()
library(datasets)
data?
;
?data
data
data(iris)
head(iris)
class(iris)
unique(iris$Specis)
iris$species
iris
iris[, iris$Species]
unique(iris[, iris$Species])
?unique
head(iris)
iris$Species
unique(iris$Species)
table(iris$Species)
?gl
class(iris$Species)
tapply(iris$Sepal.Length, iris$Species, mean)
iris(iris$Species='virginica', iris$Species)
iris(iris$Species=='virginica', iris$Species)
iris[iris$Species=='virginica', iris$Species]
iris[iris$Species=='virginica', 'Species']
iris[iris$Species=='virginica', c('Species', 'Sepal.length')]
iris[iris$Species=='virginica', c('Species', 'Sepal.Length')]
class(iris[iris$Species=='virginica', c('Species', 'Sepal.Length')])
class(iris[iris$Species=='virginica', c(Sepal.Length')])
)
]
;
;
class(iris[iris$Species=='virginica', c(Sepal.Length')])
class(iris[iris$Species=='virginica', c('Sepal.Length')])
mean(class(iris[iris$Species=='virginica', c('Sepal.Length')]))
mean(iris[iris$Species=='virginica', c('Sepal.Length')])
head(iris)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 1, mean)
data(mtcars)
?mtcars
table(mtcars$cyl)
class(mtcars$cyl)
?tapply
?mtcars
tapply(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
?sapply
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
?mtcars
View(mtcars)
names(mtcars)
row.names(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
results <- tapply(mtcars$hp, mtcars$cyl, mean)
results
class(results)
results[2,1]
dims(results)
dim(results)
results$4
results[c('4')]
results['4']
abs(results['4']-results['8'])
debug(ls)
ls
ls()
0
exit
exit()
quit()
?
stop()
q
q
q
q
q
q
q
q
q
q
q
ls()
c
?browser
?<<_
?<<-
?`<<-`
?solve
source('~/github/local/ProgrammingAssignment2/cachematrix.R')
c
source('~/github/local/ProgrammingAssignment2/cachematrix.R')
?matrix()
matrix(rnorm(1:10), nrow=6, ncol=6_)
matrix(rnorm(1:10), nrow=6, ncol=6)
matrix(rnorm(1:36), nrow=6, ncol=6)
m <- matrix(rnorm(1:36), nrow=6, ncol=6)
m
?rep
?seq
seq(1:3, times=12)
?rep
rep(1:3, times=12)
m1 <- matrix(rep(1:3, times=12), 6, 6)
m1
solve(m)
solve(m1)
cm <- makeCacheMatrix(m)
cm
mc$get()
cm$get()
cm$getInverse()
cacheSolve(cm)
cm$getInverse()
?merge
setwd("~/github/local")
setwd("~/github/local/FantasyFootballStats/r")
?download.file
?date
sys.date()
Sys.Date()
paste("adp", Sys.Date(), sep="")
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
?read.csv
?read.csv
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
View(adp)
mean(adp[adp$Position="RB", adp$ADP])
mean(adp[adp$Position=="RB", adp$ADP])
mean(adp[adp$Position=="RB", ADP])
mean(adp[adp$Position=="RB", "ADP"])
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
View(adp)
View(adp)
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
View(adp)
View(adp)
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
View(adp)
mean(adp[adp$Position=="RB", "ADP"])
mean(adp[adp$Position=="QB", "ADP"])
mean(adp[adp$Position=="WR", "ADP"])
mean(adp[adp$Position=="DEF", "ADP"])
mean(adp[adp$Position=="TE", "ADP"])
library(plyr)
ddply(adp, ~Position, summarise, mean=mean(ADP), sd=sd(age))
ddply(adp, ~Position, summarise, mean=mean(ADP), sd=sd(ADP))
?ddply
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
source('~/github/local/FantasyFootballStats/r/setupDraft.R')
